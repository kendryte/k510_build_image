name: 生成并发布镜像
on:
  workflow_dispatch:
    inputs:
      brandNew:
        description: 跳过拉取上次构建结果
        required: false
        default: ""
  # schedule:
  #   - cron:  '50 8 * * */7'
  push:
    branches:
      - master

env:
  PROJECT_NAME: "k510_build_env"

jobs:
  cancel:
    name: Cancel Previous Runs
    runs-on: ubuntu-latest
    steps:
      - name: cancel running workflows
        timeout-minutes: 5
        uses: GongT/cancel-previous-workflows@6dd7af8389c9434cc893fd33b58609e73db49fbe
        env:
          DELETE: "yes"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: "生成镜像"
    runs-on: ubuntu-latest
    steps:
      - name: "强制清理项目（如果有）"
        timeout-minutes: 1
        shell: bash
        run: |
          if [[ -e ".git" ]]; then
            git reset --hard --recurse-submodule || true
            git clean -ffdx || true
            git submodule foreach bash -c "git clean -ffdx" || true
          fi

      - name: "获取代码"
        uses: actions/checkout@v2
        timeout-minutes: 1
        with:
          submodules: "recursive"
          clean: true
          fetch-depth: 2

      - name: "初始化登录信息和基本环境"
        shell: bash
        timeout-minutes: 2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bash ci/login.sh

      - name: "从ghcr.io获取上次生成的镜像"
        shell: bash
        if: github.event.inputs.brandNew == ''
        timeout-minutes: 1
        run: podman pull "docker://ghcr.io/kendryte/k510_env"

      - name: "运行构建过程"
        shell: bash
        timeout-minutes: 5
        run: podman build -t kendryte/k510_env:latest --volume "$(pwd):/opt/build" <./Dockerfile

      - name: "发布镜像"
        timeout-minutes: 5
        shell: bash
        run: podman push kendryte/k510_env:latest ghcr.io/kendryte/k510_env

      - name: "导出镜像"
        shell: bash
        timeout-minutes: 10
        run: |
          podman tag ghcr.io/kendryte/k510_env docker.io/kendryte/k510_env:latest
          podman save docker.io/kendryte/k510_env:latest | xz >k510_docker_env.tar.xz

      - name: "创建 Release"
        id: create_release
        uses: GongT/actions-recreate-release@0eccdfe77165640ce33239b47cae6ea3de465cc5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          release_name: Latest
          body: Auto build from ${{ github.sha }} (master)
          draft: false
          prerelease: false

      - name: "上传镜像文件"
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: k510_docker_env.tar.xz
          asset_name: oci-image.tar.xz
          asset_content_type: application/octet-stream
